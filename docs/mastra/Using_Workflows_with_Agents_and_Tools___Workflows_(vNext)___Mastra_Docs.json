{
    "id": "https://mastra.ai/docs/workflows-vnext/using-with-agents-and-tools",
    "title": "Using Workflows with Agents and Tools | Workflows (vNext) | Mastra Docs",
    "url": "https://mastra.ai/docs/workflows-vnext/using-with-agents-and-tools",
    "author": "",
    "text": "Agent as a step \n vNext workflows can use Mastra agents directly as steps using createStep(agent): \n // Agent defined elsewhere \n const myAgent = new Agent ({ \n name: \" myAgent \", \n instructions: \"... \", \n model: openai ( \" gpt-4 \"), \n}); \n \n // Create Mastra instance with agent \n const mastra = new Mastra ({ \n agents: { \n myAgent, \n }, \n vnext_workflows: { \n myWorkflow, \n }, \n}); \n \n // Use agent in workflow \n myWorkflow \n . then (preparationStep) \n . map ({ \n prompt: { \n step: preparationStep, \n path: \" formattedPrompt \", \n }, \n }) \n . then ( createStep (myAgent)) // Use agent directly as a step \n . then (processResultStep) \n . commit (); \n Tools as a step \n vNext workflows can use Mastra tools directly as steps using createStep(tool): \n const myTool = createTool ({ \n id: \" my-tool \", \n description: \" My tool \", \n inputSchema: z. object ({}), \n outputSchema: z. object ({}), \n execute: async ({ inputData }) =&gt; { \n return { result: \" success \" }; \n }, \n}); \n \n myWorkflow. then ( createStep (myTool)). then (finalStep). commit (); \n Workflow as a tool in an agent \n import { Agent } from \" @mastra/core/agent \"; \n import { createTool } from \" @mastra/core/tools \"; \n import { createWorkflow, createStep } from \" @mastra/core/workflows/vNext \"; \n \n const weatherWorkflow = createWorkflow ({ \n steps: [fetchWeather, planActivities], \n id: \" weather-workflow-step1-single-day \", \n inputSchema: z. object ({ \n city: z. string (). describe ( \" The city to get the weather for \"), \n }), \n outputSchema: z. object ({ \n activities: z. string (), \n }), \n}) \n . then (fetchWeather) \n . then (planActivities); \n \n const activityPlannerTool = createTool ({ \n id: \" get-weather-specific-activities \", \n description: \" Get weather-specific activities for a city \", \n inputSchema: z. object ({ \n city: z. string (), \n }), \n outputSchema: z. object ({ \n activities: z. array (z. string ()), \n }), \n execute: async ({ context, mastra }) =&gt; { \n const plannerWorkflow = mastra?. getWorkflow ( \" my-workflow \"); \n if (! plannerWorkflow) { \n throw new Error ( \" Planner workflow not found \"); \n } \n \n const run = plannerWorkflow. createRun (); \n const results = await run. start ({ \n triggerData: { \n city: context.city, \n }, \n }); \n const planActivitiesStep = results.results[ \" plan-activities \"]; \n if (planActivitiesStep.status === \" success \") { \n return planActivitiesStep.output; \n } \n \n return { \n activities: \" No activities found \", \n }; \n }, \n}); \n \n const activityPlannerAgent = new Agent ({ \n name: \" activityPlannerAgent \", \n model: openai ( \" gpt-4o \"), \n instructions: ` \n You are an activity planner. You have access to a tool that will help you get weather-specific activities for any city. The tool uses agents to plan the activities, you just need to provide the city. Whatever information you get back, return it as is and add your own thoughts on top of it. \n `, \n tools: { activityPlannerTool }, \n}); \n \n export const mastra = new Mastra ({ \n vnext_workflows: { \n \" my-workflow \": myWorkflow, \n }, \n agents: { \n activityPlannerAgent, \n }, \n}); Input Data Mapping Overview",
    "image": "https://mastra.ai/api/og/docs?title=Using%20Workflows%20with%20Agents%20and%20Tools%20|%20Workflows%20(vNext)%20|%20Mastra%20Docs&description=Steps%20in%20Mastra%20workflows%20(vNext)%20provide%20a%20structured%20way%20to%20manage%20operations%20by%20defining%20inputs,%20outputs,%20and%20execution%20logic.",
    "favicon": "https://mastra.ai/favicon.ico",
    "extras": {
        "links": [
            "https://mastra.ai/en/docs/workflows-vnext/using-with-agents-and-tools",
            "https://mastra.ai/",
            "https://mastra.ai/docs",
            "https://mastra.ai/examples"
        ]
    }
}