{
    "id": "https://mastra.ai/examples/workflows/conditional-branching",
    "title": "Example: Conditional Branching (experimental) | Workflows | Mastra Docs",
    "url": "https://mastra.ai/examples/workflows/conditional-branching",
    "publishedDate": "",
    "author": "",
    "text": "Workflow with Conditional Branching (experimental) \n Workflows often need to follow different paths based on conditions. This example demonstrates how to use if and else to create conditional branches in your workflows. \n Basic If/Else Example \n This example shows a simple workflow that takes different paths based on a numeric value: \n import { Mastra } from ' @mastra/core '; \n import { Step, Workflow } from ' @mastra/core/workflows '; \n import { z } from ' zod '; \n \n \n // Step that provides the initial value \n const startStep = new Step ({ \n id: ' start ', \n outputSchema: z. object ({ \n value: z. number (), \n }), \n execute: async ({ context }) =&gt; { \n // Get the value from the trigger data \n const value = context.triggerData.inputValue; \n return { value }; \n }, \n}); \n \n // Step that handles high values \n const highValueStep = new Step ({ \n id: ' highValue ', \n outputSchema: z. object ({ \n result: z. string (), \n }), \n execute: async ({ context }) =&gt; { \n const value = context. getStepResult &lt;{ value: number }&gt;( ' start ')?.value; \n return { result: ` High value processed: ${ value}` }; \n }, \n}); \n \n // Step that handles low values \n const lowValueStep = new Step ({ \n id: ' lowValue ', \n outputSchema: z. object ({ \n result: z. string (), \n }), \n execute: async ({ context }) =&gt; { \n const value = context. getStepResult &lt;{ value: number }&gt;( ' start ')?.value; \n return { result: ` Low value processed: ${ value}` }; \n }, \n}); \n \n // Final step that summarizes the result \n const finalStep = new Step ({ \n id: ' final ', \n outputSchema: z. object ({ \n summary: z. string (), \n }), \n execute: async ({ context }) =&gt; { \n // Get the result from whichever branch executed \n const highResult = context. getStepResult &lt;{ result: string }&gt;( ' highValue ')?.result; \n const lowResult = context. getStepResult &lt;{ result: string }&gt;( ' lowValue ')?.result; \n \n const result = highResult || lowResult; \n return { summary: ` Processing complete: ${ result}` }; \n }, \n}); \n \n // Build the workflow with conditional branching \n const conditionalWorkflow = new Workflow ({ \n name: ' conditional-workflow ', \n triggerSchema: z. object ({ \n inputValue: z. number (), \n }), \n}); \n \n conditionalWorkflow \n . step (startStep) \n . if ( async ({ context }) =&gt; { \n const value = context. getStepResult &lt;{ value: number }&gt;( ' start ')?.value ?? 0; \n return value &gt;= 10; // Condition: value is 10 or greater \n }) \n . then (highValueStep) \n . then (finalStep) \n . else () \n . then (lowValueStep) \n . then (finalStep) // Both branches converge on the final step \n . commit (); \n \n // Register the workflow \n const mastra = new Mastra ({ \n workflows: { conditionalWorkflow }, \n}); \n \n // Example usage \n async function runWorkflow (inputValue: number) { \n const workflow = mastra. getWorkflow ( ' conditionalWorkflow '); \n const { start } = workflow. createRun (); \n \n const result = await start ({ \n triggerData: { inputValue }, \n }); \n \n console. log ( ' Workflow result: ', result.results); \n return result; \n} \n \n // Run with a high value (follows the \"if\" branch) \n const result1 = await runWorkflow ( 15); \n // Run with a low value (follows the \"else\" branch) \n const result2 = await runWorkflow ( 5); \n \n console. log ( ' Result 1: ', result1); \n console. log ( ' Result 2: ', result2); \n \n Using Reference-Based Conditions \n You can also use reference-based conditions with comparison operators: \n // Using reference-based conditions instead of functions \n conditionalWorkflow \n . step (startStep) \n . if ({ \n ref: { step: startStep, path: ' value ' }, \n query: { $gte: 10 }, // Condition: value is 10 or greater \n }) \n . then (highValueStep) \n . then (finalStep) \n . else () \n . then (lowValueStep) \n . then (finalStep) \n . commit (); \n \n Branching Paths Calling an Agent",
    "image": "https://mastra.ai/api/og/docs?title=Example:%20Conditional%20Branching%20(experimental)%20|%20Workflows%20|%20Mastra%20Docs&description=Example%20of%20using%20Mastra%20to%20create%20conditional%20branches%20in%20workflows%20using%20if/else%20statements.",
    "favicon": "https://mastra.ai/favicon.ico",
    "extras": {
        "links": [
            "https://mastra.ai/en/examples/workflows/conditional-branching",
            "https://mastra.ai/",
            "https://mastra.ai/docs",
            "https://mastra.ai/examples"
        ]
    }
}